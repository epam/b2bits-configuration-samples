###################################################################
################# REPLICATION SERVICE CONFIGURATION ###############
###################################################################

# Default (initial) replication mode (synchronous or asynchronous)
# Default: false
#fej.replication.leader.sync=false;

# Default (initial) timeout for synchronous replication in milliseconds.
# Process could be blocked for this timeout till receive acknowledgement from other side
# Default: 0 milliseconds (async mode)
#fej.replication.leader.async.timeout=0;

# Maximum number of items, which may be sent back in answer to synchronization request.
# If it needs to synchronize more items for storage, backup node will send few synchronization requests.
# Default: 5000
#fej.replication.synchronization.items_per_request=5000

###################################################################
################## Replication Leader Service #####################
###################################################################

# Replication leader incoming buffer size
# The size of the leader incoming ring buffer, must be power of 2.
fej.replication.leader.receive.buffer.size=512

# Replication leader incoming waiting strategy
# The wait strategy to use for the leader incoming ring buffer
# SEE: https://lmax-exchange.github.io/disruptor/docs/com/lmax/disruptor/WaitStrategy.html
# Default: com.lmax.disruptor.BlockingWaitStrategy
fej.replication.leader.receive.wait.strategy=com.lmax.disruptor.BlockingWaitStrategy

# Replication leader outgoing buffer size
# The size of the leader outgoing ring buffer, must be power of 2.
fej.replication.leader.send.buffer.size=2048

# Replication leader outgoing waiting strategy
# The wait strategy to use for the leader outgoing ring buffer
# SEE: https://lmax-exchange.github.io/disruptor/docs/com/lmax/disruptor/WaitStrategy.html
# Default: com.lmax.disruptor.BlockingWaitStrategy
fej.replication.leader.send.wait.strategy=com.lmax.disruptor.BlockingWaitStrategy


###################################################################
################## Replication Backup Service #####################
###################################################################

# Replication backup incoming buffer size
# The size of the backup incoming ring buffer, must be power of 2.
fej.replication.backup.receive.buffer.size=1024

# Replication backup incoming waiting strategy
# The wait strategy to use for the backup incoming ring buffer
# SEE: https://lmax-exchange.github.io/disruptor/docs/com/lmax/disruptor/WaitStrategy.html
# Default: com.lmax.disruptor.BlockingWaitStrategy
fej.replication.backup.receive.wait.strategy=com.lmax.disruptor.BlockingWaitStrategy

# Replication backup outgoing buffer size
# The size of the backup outgoing ring buffer, must be power of 2.
fej.replication.backup.send.buffer.size=512

# Replication backup outgoing waiting strategy
# The wait strategy to use for the backup outgoing ring buffer
# SEE: https://lmax-exchange.github.io/disruptor/docs/com/lmax/disruptor/WaitStrategy.html
# Default: com.lmax.disruptor.BlockingWaitStrategy
fej.replication.backup.send.wait.strategy=com.lmax.disruptor.BlockingWaitStrategy


###################################################################
########################### Aeron transpot ########################
###################################################################

# Use embedded aeron media driver
# SEE: https://github.com/real-logic/Aeron/wiki/Java-Programming-Guide
# Default: true
fej.replication.aeron.mediadriver.embedded=true

# Sending thread waiting strategy
# Provides an IdleStrategy for the thread responsible for communicating with the Aeron Media Driver.
# SEE: https://github.com/real-logic/Aeron/wiki/Best-Practices-Guide#idle-strategies
# SEE: com.epam.fej.replication.transport.aeron.support.ConfigurableBackoffIdleStrategy
# SEE: com.epam.fej.replication.transport.aeron.support.ConfigurableSleepingIdleStrategy
# Default: uk.co.real_logic.agrona.concurrent.BackoffIdleStrategy
fej.replication.aeron.idle.strategy=uk.co.real_logic.agrona.concurrent.BackoffIdleStrategy

# The timeout in milliseconds after which the Aeron driver is considered dead if it does not update its C'n'C timestamp.
# SEE: https://github.com/real-logic/Aeron/wiki/Configuration-Options#common-options
# Default: 10000
#fej.replication.aeron.driver.timeout=10000

# Polling thread waiting strategy
# Default: org.agrona.concurrent.YieldingIdleStrategy
# SEE: com.epam.fej.replication.transport.aeron.support.ConfigurableBackoffIdleStrategy
# SEE: com.epam.fej.replication.transport.aeron.support.ConfigurableSleepingIdleStrategy
fej.replication.aeron.pooling.wait.strategy=org.agrona.concurrent.YieldingIdleStrategy

