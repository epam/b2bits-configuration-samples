###################################################################
#################     FIX SERVICE CONFIGURATION     ###############
###################################################################
# Fix server port
server.port=8911

#####################################################################
################# ADMINISTRATIVE ACCESS CONFIGURATION ###############
#####################################################################
# Comma-separated list of required roles to login to the remote shell. 'roles' can be empty.
# This means no special access rights to connect to the shell is required.
ssh.auth.roles=SSH_ADMIN

# Comma-separated list of required roles to login over JMX. 'roles' can be empty.
# This means no special access rights is required.
jmx.auth.roles=JMX_ADMIN

###################################################################
#################  LDAP AUTHORIZATION CONFIGURATION ###############
###################################################################
# URL of the external LDAP server against which authentication will take place.
#ldap.server=

# Username (DN) of the "manager" user identity which will be used to
# authenticate to a LDAP server and perform search.
#ldap.manager.username=

# The password for the manager DN
#ldap.manager.password=

# The LDAP filter used to search for users. For example "(uid={0})".
# The substituted parameter is the user's login name.
#ldap.user.search.filter=(uid={0})

# Defines the part of the directory tree under which user searches should be performed.
# Defaults to "" (searching from the root).
#ldap.user.search.base=

# Group search filter. Defaults to (uniqueMember={0}). The substituted parameter is the DN of the user.
# The parameter {1} can be used if you want to filter on the login name.
#ldap.group.search.filter=(uniqueMember={0})

# Defines the part of the directory tree under which group searches should be performed.
# Defaults to "" (searching from the root).
#ldap.group.search.base=

# String prefix that will be added to role strings loaded from persistent storage.
# By default the authority names will have the prefix "ROLE_" prepended. If you don't want any prefix, use "none".
#ldap.group.role.prefix=ROLE_

###################################################################
#################     JMX SERVICE CONFIGURATION     ###############
###################################################################
# Enable Jmx
jmx.enable=true

# Jmx port
jmx.port=1099

# URL for the JMXConnectorServer
jmx.url=service:jmx:rmi://localhost/jndi/rmi://localhost:1099/fixedge

###################################################################
#################    REST SERVICE CONFIGURATION     ###############
###################################################################
# Enable REST service, if it is false or empty, REST service will not be available
rest.service.enable=true

# Name of REST service, if it is empty or disabled, REST service will not be available and registered in Service Discovery
rest.service.name=REST-AdminAPI

# Name of REST port, if it is empty or disabled, REST service will not be available and registered in Service Discovery
rest.service.port=9010

# REST server keystore properties
rest.keystore.path = classpath:/ssl/rest/rest_keystore.jks
rest.keystore.password = rest

# REST server truststore properties
#rest.truststore.path = classpath:/ssl/rest/rest_keystore.jks
#rest.truststore.password = rest

# True if REST server needs client authentication.
#rest.ssl.auth = false

# Prometheus metrics are also exposed via REST service, at path /prometheus/metrics
# If false, /prometheus/metrics endpoint will be still available, but will expose only minimal information
metrics.enable = true


###################################################################
################# REPLICATION SERVICE CONFIGURATION ###############
###################################################################
# Cluster nodes list with priorities
# It is used to define next leader in the cluster
cluster.hazelcast.nodes=fej1 , fej2 

# Local port to listen for replicated data
replication.server.port=9000

# Remote port on backup nodes to send replicated data
replication.remote.port=9999

# Parameter specifies back-up directory for message logs.
# Valid values: existent directory name (relative or absolute path)
replication.directory=./logs/aeron


###################################################################
#################  DISCOVERY SERVICE CONFIGURATION  ###############
###################################################################
server.id=fej_a
# Name of server, if it is not empty, server will be registered in Discovery by this name. Otherwise, it will not be registered.
server.name=fej_a
# Name of protocol, used for server registration in Service Discovery
protocol.name=FIX

# Health check interval (Service Discovery)
service.discovery.healthcheck.interval=10

# Service Discovery attempt period, milliseconds
service.discovery.attempt.period=10000

service.discovery.enabled = true

# To use original sessionConfigManager and scheduleConfigManager beans set 'false' or comment it
# To use fixxicch2 session and schedule config managers set 'true'
server.useFixicch2ConfigManager=true

# Fixicch2 REST API to load fix session and schedules configs and to subscribe on session and schedules changes
#fixicch2.url=http://localhost:8080
fixicch2.service=FIXICC-H2
fixicch2.url.prefix=http

# Pause to reconnect to FIXICC H2 URL in case of errors, mc
fixicch2.reconnect.pause=2000

fixicch2.insecure.connection.enabled = true
fixicch2.enable=true

consul.host = localhost
consul.port = 8500
server.checkHost = localhost
